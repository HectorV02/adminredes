worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/json;
    sendfile        on;
    keepalive_timeout  65;

    # Configuración de upstreams
    upstream user_service {
        server user-service:5000;
    }

    upstream task_service {
        server task-service:5001;
    }

    server {
        listen 80;
        server_name localhost;

        # Configuración de logs
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        # Redirección a HTTPS (opcional)
        # return 301 https://$host$request_uri;

        # Configuración de rutas
        location /api/users/ {
            proxy_pass http://user_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # Configuración de timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        location /api/tasks/ {
            proxy_pass http://task_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # Configuración de timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        location /admin {
            alias /usr/share/nginx/html/admin;
            index index.html;
        }

        location / {
            return 404 '{"error": "Endpoint not found", "available_endpoints": ["/api/users", "/api/tasks", "/admin"]}';
        }
    }
}